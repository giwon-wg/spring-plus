plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'idea'
    id 'org.jetbrains.kotlin.jvm' version '2.0.0'
    id 'org.jetbrains.kotlin.plugin.lombok' version '2.0.0'
    id 'org.jetbrains.kotlin.plugin.spring' version '2.0.0'
    id 'org.jetbrains.kotlin.plugin.jpa' version '2.0.0'
    id 'org.jetbrains.kotlin.kapt' version '2.0.0'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main {
        java {
            srcDirs += "src/main/kotlin"
            srcDirs += querydslDir
            exclude '**/unused/**'
        }
    }
}

idea {
    module {
        generatedSourceDirs += file(querydslDir)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
//    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api:2.1.1'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Database
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // JWT
    compileOnly 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    //Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    kapt "com.querydsl:querydsl-apt:5.0.0:jakarta"
    kapt "jakarta.annotation:jakarta.annotation-api"
    kapt "jakarta.persistence:jakarta.persistence-api"
    implementation 'io.github.microutils:kotlin-logging-jvm:3.0.5'
    implementation("io.github.cdimascio:dotenv-kotlin:6.4.1")
    implementation 'io.github.cdimascio:dotenv-java:2.3.2'

}

kapt {
    keepJavacAnnotationProcessors = true
}

allOpen {
    annotation("jakarta.persistence.Entity")
    annotation("jakarta.persistence.Embeddable")
    annotation("jakarta.persistence.MappedSuperclass")
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
    options.compilerArgs += "-XprintRounds"
    options.compilerArgs += "-XprintProcessorInfo"
}